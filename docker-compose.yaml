# version: "3"

services:
  postgres:
    image: postgres
    container_name: hyperhive_postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=8086
      - POSTGRES_USER=postgres
    networks:
      - hyperhive_network
    volumes:
      - hyperhive_volume:/var/lib/postgresql/data
    hostname:
      postgresDB
    ports:
      - 5431:5432

  mongodb:
    image: mongo
    container_name: hyperhive_mongodb
    restart: on-failure
    networks:
      - hyperhive_network
    volumes:
      - hyperhive_volume:/data/db
    hostname:
      monogDB
    ports:
      - 27018:27017

  zookeeper:
    image: confluentinc/cp-zookeeper:latest  
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000   
    networks:
      - hyperhive_network
    container_name: zookeeper_deploy

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      - hyperhive_network
    container_name: kafka
    hostname:
      kafkaBroker
    depends_on:
    - zookeeper
      
  api-gateway:
    image: hyperhive_api_gateway
    build: ./api-gateway/
    restart: always
    depends_on:
      - postgres
    container_name: hyperhive_api_gateway
    networks:
      - hyperhive_network
    ports:
      - 9000:8000
    
  auth-services:
    image: hyperhive_auth_service
    build: ./auth-service/
    restart: always
    depends_on:
      - postgres
    container_name: hyperhive_auth_service
    networks:
      - hyperhive_network

  friend-service:
    image: hyperhive_friend_service
    build: ./friend-service
    depends_on:
      - postgres
      - mongodb
      - kafka
    restart:
      always
    container_name: hyperhive_friend_service
    networks:
      - hyperhive_network

  server-service:
    image: hyperhive_server_service
    build: ./server-service
    restart:
      always
    depends_on:
      - postgres
      - mongodb
      - kafka
    container_name: hyperhive_server_service
    networks:
      - hyperhive_network

networks:
  hyperhive_network:
    driver: bridge

volumes:
  hyperhive_volume:
