// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: pkg/pb/server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ServerName string `protobuf:"bytes,1,opt,name=ServerName,proto3" json:"ServerName,omitempty"`
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerRequest.ProtoReflect.Descriptor instead.
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{0}
}

func (x *CreateServerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateServerRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type CreateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID   string `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=ServerName,proto3" json:"ServerName,omitempty"`
}

func (x *CreateServerResponse) Reset() {
	*x = CreateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerResponse) ProtoMessage() {}

func (x *CreateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerResponse.ProtoReflect.Descriptor instead.
func (*CreateServerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{1}
}

func (x *CreateServerResponse) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *CreateServerResponse) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type CreateCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ServerID     string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	CategoryName string `protobuf:"bytes,3,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`
}

func (x *CreateCategoryRequest) Reset() {
	*x = CreateCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryRequest) ProtoMessage() {}

func (x *CreateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCategoryRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateCategoryRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *CreateCategoryRequest) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type CreateChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ServerID    string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	CategoryID  string `protobuf:"bytes,3,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	ChannelName string `protobuf:"bytes,4,opt,name=ChannelName,proto3" json:"ChannelName,omitempty"`
	ChannelType string `protobuf:"bytes,5,opt,name=ChannelType,proto3" json:"ChannelType,omitempty"`
}

func (x *CreateChannelRequest) Reset() {
	*x = CreateChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelRequest) ProtoMessage() {}

func (x *CreateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateChannelRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{3}
}

func (x *CreateChannelRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateChannelRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *CreateChannelRequest) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *CreateChannelRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *CreateChannelRequest) GetChannelType() string {
	if x != nil {
		return x.ChannelType
	}
	return ""
}

type JoinToServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *JoinToServerRequest) Reset() {
	*x = JoinToServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinToServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinToServerRequest) ProtoMessage() {}

func (x *JoinToServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinToServerRequest.ProtoReflect.Descriptor instead.
func (*JoinToServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{4}
}

func (x *JoinToServerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *JoinToServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID  string `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	CategoryID string `protobuf:"bytes,2,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{5}
}

func (x *Channel) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *Channel) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FullServerChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryID string     `protobuf:"bytes,1,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	Name       string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Channel    []*Channel `protobuf:"bytes,3,rep,name=channel,proto3" json:"channel,omitempty"`
}

func (x *FullServerChannel) Reset() {
	*x = FullServerChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullServerChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullServerChannel) ProtoMessage() {}

func (x *FullServerChannel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullServerChannel.ProtoReflect.Descriptor instead.
func (*FullServerChannel) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{6}
}

func (x *FullServerChannel) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *FullServerChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FullServerChannel) GetChannel() []*Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type GetCategoryOfServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID string `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *GetCategoryOfServerRequest) Reset() {
	*x = GetCategoryOfServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryOfServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryOfServerRequest) ProtoMessage() {}

func (x *GetCategoryOfServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryOfServerRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryOfServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{7}
}

func (x *GetCategoryOfServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type GetChannelsOfServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID string `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *GetChannelsOfServerRequest) Reset() {
	*x = GetChannelsOfServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelsOfServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelsOfServerRequest) ProtoMessage() {}

func (x *GetChannelsOfServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelsOfServerRequest.ProtoReflect.Descriptor instead.
func (*GetChannelsOfServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetChannelsOfServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type GetChannelsOfServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FullServerChannel `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetChannelsOfServerResponse) Reset() {
	*x = GetChannelsOfServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelsOfServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelsOfServerResponse) ProtoMessage() {}

func (x *GetChannelsOfServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelsOfServerResponse.ProtoReflect.Descriptor instead.
func (*GetChannelsOfServerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{9}
}

func (x *GetChannelsOfServerResponse) GetData() []*FullServerChannel {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCategoryOfServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FullServerChannel `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetCategoryOfServerResponse) Reset() {
	*x = GetCategoryOfServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryOfServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryOfServerResponse) ProtoMessage() {}

func (x *GetCategoryOfServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryOfServerResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryOfServerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{10}
}

func (x *GetCategoryOfServerResponse) GetData() []*FullServerChannel {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserServerRequest) Reset() {
	*x = GetUserServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserServerRequest) ProtoMessage() {}

func (x *GetUserServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserServerRequest.ProtoReflect.Descriptor instead.
func (*GetUserServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserServerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserServerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Icon     string `protobuf:"bytes,2,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserServerList) Reset() {
	*x = UserServerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserServerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServerList) ProtoMessage() {}

func (x *UserServerList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServerList.ProtoReflect.Descriptor instead.
func (*UserServerList) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{12}
}

func (x *UserServerList) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UserServerList) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UserServerList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetUserServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserServerList []*UserServerList `protobuf:"bytes,1,rep,name=UserServerList,proto3" json:"UserServerList,omitempty"`
}

func (x *GetUserServerResponse) Reset() {
	*x = GetUserServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserServerResponse) ProtoMessage() {}

func (x *GetUserServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserServerResponse.ProtoReflect.Descriptor instead.
func (*GetUserServerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserServerResponse) GetUserServerList() []*UserServerList {
	if x != nil {
		return x.UserServerList
	}
	return nil
}

type GetServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID string `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *GetServerRequest) Reset() {
	*x = GetServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerRequest) ProtoMessage() {}

func (x *GetServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerRequest.ProtoReflect.Descriptor instead.
func (*GetServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{14}
}

func (x *GetServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type GetServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId    string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Icon        string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	CoverPhoto  string `protobuf:"bytes,5,opt,name=cover_photo,json=coverPhoto,proto3" json:"cover_photo,omitempty"`
	OnlineUsers string `protobuf:"bytes,6,opt,name=OnlineUsers,proto3" json:"OnlineUsers,omitempty"`
}

func (x *GetServerResponse) Reset() {
	*x = GetServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerResponse) ProtoMessage() {}

func (x *GetServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerResponse.ProtoReflect.Descriptor instead.
func (*GetServerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{15}
}

func (x *GetServerResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *GetServerResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetServerResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetServerResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetServerResponse) GetCoverPhoto() string {
	if x != nil {
		return x.CoverPhoto
	}
	return ""
}

func (x *GetServerResponse) GetOnlineUsers() string {
	if x != nil {
		return x.OnlineUsers
	}
	return ""
}

type GetChannelMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	OffSet    string `protobuf:"bytes,2,opt,name=OffSet,proto3" json:"OffSet,omitempty"`
	Limit     string `protobuf:"bytes,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetChannelMessageRequest) Reset() {
	*x = GetChannelMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessageRequest) ProtoMessage() {}

func (x *GetChannelMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessageRequest.ProtoReflect.Descriptor instead.
func (*GetChannelMessageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{16}
}

func (x *GetChannelMessageRequest) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *GetChannelMessageRequest) GetOffSet() string {
	if x != nil {
		return x.OffSet
	}
	return ""
}

func (x *GetChannelMessageRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

type ChannelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID      int32  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ChannelID   int32  `protobuf:"varint,3,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	ServerID    int32  `protobuf:"varint,4,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	Content     string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	TimeStamp   string `protobuf:"bytes,6,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	Type        string `protobuf:"bytes,7,opt,name=Type,proto3" json:"Type,omitempty"`
	UserName    string `protobuf:"bytes,8,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserProfile string `protobuf:"bytes,9,opt,name=UserProfile,proto3" json:"UserProfile,omitempty"`
}

func (x *ChannelMessage) Reset() {
	*x = ChannelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessage) ProtoMessage() {}

func (x *ChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessage.ProtoReflect.Descriptor instead.
func (*ChannelMessage) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{17}
}

func (x *ChannelMessage) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ChannelMessage) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChannelMessage) GetChannelID() int32 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *ChannelMessage) GetServerID() int32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

func (x *ChannelMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChannelMessage) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *ChannelMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChannelMessage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ChannelMessage) GetUserProfile() string {
	if x != nil {
		return x.UserProfile
	}
	return ""
}

type GetChannelMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*ChannelMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetChannelMessageResponse) Reset() {
	*x = GetChannelMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMessageResponse) ProtoMessage() {}

func (x *GetChannelMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMessageResponse.ProtoReflect.Descriptor instead.
func (*GetChannelMessageResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{18}
}

func (x *GetChannelMessageResponse) GetMessages() []*ChannelMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type UpdateServerPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID string `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	UserID   string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Image    []byte `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *UpdateServerPhotoRequest) Reset() {
	*x = UpdateServerPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerPhotoRequest) ProtoMessage() {}

func (x *UpdateServerPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerPhotoRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerPhotoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateServerPhotoRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *UpdateServerPhotoRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateServerPhotoRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *UpdateServerPhotoRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UpdateServerDiscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ServerID    string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *UpdateServerDiscriptionRequest) Reset() {
	*x = UpdateServerDiscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerDiscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerDiscriptionRequest) ProtoMessage() {}

func (x *UpdateServerDiscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerDiscriptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerDiscriptionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateServerDiscriptionRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateServerDiscriptionRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *UpdateServerDiscriptionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetServerMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID string `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	OffSet   string `protobuf:"bytes,2,opt,name=OffSet,proto3" json:"OffSet,omitempty"`
	Limit    string `protobuf:"bytes,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetServerMembersRequest) Reset() {
	*x = GetServerMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerMembersRequest) ProtoMessage() {}

func (x *GetServerMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerMembersRequest.ProtoReflect.Descriptor instead.
func (*GetServerMembersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{21}
}

func (x *GetServerMembersRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *GetServerMembersRequest) GetOffSet() string {
	if x != nil {
		return x.OffSet
	}
	return ""
}

func (x *GetServerMembersRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

type ServerMemberModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserProfile string `protobuf:"bytes,2,opt,name=userProfile,proto3" json:"userProfile,omitempty"`
	UserName    string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Role        string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ServerMemberModel) Reset() {
	*x = ServerMemberModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMemberModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMemberModel) ProtoMessage() {}

func (x *ServerMemberModel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMemberModel.ProtoReflect.Descriptor instead.
func (*ServerMemberModel) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{22}
}

func (x *ServerMemberModel) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServerMemberModel) GetUserProfile() string {
	if x != nil {
		return x.UserProfile
	}
	return ""
}

func (x *ServerMemberModel) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ServerMemberModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerMemberModel) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type GetServerMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ServerMemberModel `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *GetServerMembersResponse) Reset() {
	*x = GetServerMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerMembersResponse) ProtoMessage() {}

func (x *GetServerMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerMembersResponse.ProtoReflect.Descriptor instead.
func (*GetServerMembersResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{23}
}

func (x *GetServerMembersResponse) GetList() []*ServerMemberModel {
	if x != nil {
		return x.List
	}
	return nil
}

type RemoveUserFromServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	RemoverID string `protobuf:"bytes,2,opt,name=RemoverID,proto3" json:"RemoverID,omitempty"`
	ServerID  string `protobuf:"bytes,3,opt,name=serverID,proto3" json:"serverID,omitempty"`
}

func (x *RemoveUserFromServerRequest) Reset() {
	*x = RemoveUserFromServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserFromServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserFromServerRequest) ProtoMessage() {}

func (x *RemoveUserFromServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserFromServerRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserFromServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveUserFromServerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RemoveUserFromServerRequest) GetRemoverID() string {
	if x != nil {
		return x.RemoverID
	}
	return ""
}

func (x *RemoveUserFromServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type UpdateMemberRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TargetUserID string `protobuf:"bytes,2,opt,name=TargetUserID,proto3" json:"TargetUserID,omitempty"`
	TargetRole   string `protobuf:"bytes,3,opt,name=TargetRole,proto3" json:"TargetRole,omitempty"`
	ServerID     string `protobuf:"bytes,4,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *UpdateMemberRoleRequest) Reset() {
	*x = UpdateMemberRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRoleRequest) ProtoMessage() {}

func (x *UpdateMemberRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateMemberRoleRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateMemberRoleRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateMemberRoleRequest) GetTargetUserID() string {
	if x != nil {
		return x.TargetUserID
	}
	return ""
}

func (x *UpdateMemberRoleRequest) GetTargetRole() string {
	if x != nil {
		return x.TargetRole
	}
	return ""
}

func (x *UpdateMemberRoleRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type LeftFromServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *LeftFromServerRequest) Reset() {
	*x = LeftFromServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeftFromServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeftFromServerRequest) ProtoMessage() {}

func (x *LeftFromServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeftFromServerRequest.ProtoReflect.Descriptor instead.
func (*LeftFromServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{26}
}

func (x *LeftFromServerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LeftFromServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type DeleteServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
}

func (x *DeleteServerRequest) Reset() {
	*x = DeleteServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerRequest) ProtoMessage() {}

func (x *DeleteServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerRequest.ProtoReflect.Descriptor instead.
func (*DeleteServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteServerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type GetForumPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID string `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Limit     string `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetForumPostRequest) Reset() {
	*x = GetForumPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForumPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForumPostRequest) ProtoMessage() {}

func (x *GetForumPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForumPostRequest.ProtoReflect.Descriptor instead.
func (*GetForumPostRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{28}
}

func (x *GetForumPostRequest) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *GetForumPostRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetForumPostRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type GetForumPostModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfile     string `protobuf:"bytes,1,opt,name=userProfile,proto3" json:"userProfile,omitempty"`
	UserName        string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	UserId          int32  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ChannelId       int32  `protobuf:"varint,4,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ServerId        int32  `protobuf:"varint,5,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Content         string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	MainContentType string `protobuf:"bytes,7,opt,name=mainContentType,proto3" json:"mainContentType,omitempty"`
	SubContent      string `protobuf:"bytes,8,opt,name=subContent,proto3" json:"subContent,omitempty"`
	TimeStamp       string `protobuf:"bytes,9,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	Type            string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	CommandContent  string `protobuf:"bytes,11,opt,name=commandContent,proto3" json:"commandContent,omitempty"`
	PostId          string `protobuf:"bytes,12,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (x *GetForumPostModel) Reset() {
	*x = GetForumPostModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForumPostModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForumPostModel) ProtoMessage() {}

func (x *GetForumPostModel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForumPostModel.ProtoReflect.Descriptor instead.
func (*GetForumPostModel) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{29}
}

func (x *GetForumPostModel) GetUserProfile() string {
	if x != nil {
		return x.UserProfile
	}
	return ""
}

func (x *GetForumPostModel) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetForumPostModel) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetForumPostModel) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetForumPostModel) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *GetForumPostModel) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetForumPostModel) GetMainContentType() string {
	if x != nil {
		return x.MainContentType
	}
	return ""
}

func (x *GetForumPostModel) GetSubContent() string {
	if x != nil {
		return x.SubContent
	}
	return ""
}

func (x *GetForumPostModel) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *GetForumPostModel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetForumPostModel) GetCommandContent() string {
	if x != nil {
		return x.CommandContent
	}
	return ""
}

func (x *GetForumPostModel) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type ForumCommandModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserProfile string               `protobuf:"bytes,2,opt,name=UserProfile,proto3" json:"UserProfile,omitempty"`
	UserName    string               `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserId      int32                `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ChannelId   int32                `protobuf:"varint,5,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"`
	ServerId    int32                `protobuf:"varint,6,opt,name=ServerId,proto3" json:"ServerId,omitempty"`
	ParentId    string               `protobuf:"bytes,7,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Content     string               `protobuf:"bytes,8,opt,name=Content,proto3" json:"Content,omitempty"`
	TimeStamp   string               `protobuf:"bytes,9,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	Type        string               `protobuf:"bytes,10,opt,name=Type,proto3" json:"Type,omitempty"`
	Thread      []*ForumCommandModel `protobuf:"bytes,11,rep,name=Thread,proto3" json:"Thread,omitempty"`
}

func (x *ForumCommandModel) Reset() {
	*x = ForumCommandModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForumCommandModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForumCommandModel) ProtoMessage() {}

func (x *ForumCommandModel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForumCommandModel.ProtoReflect.Descriptor instead.
func (*ForumCommandModel) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{30}
}

func (x *ForumCommandModel) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ForumCommandModel) GetUserProfile() string {
	if x != nil {
		return x.UserProfile
	}
	return ""
}

func (x *ForumCommandModel) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ForumCommandModel) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ForumCommandModel) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ForumCommandModel) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ForumCommandModel) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ForumCommandModel) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ForumCommandModel) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *ForumCommandModel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ForumCommandModel) GetThread() []*ForumCommandModel {
	if x != nil {
		return x.Thread
	}
	return nil
}

type GetForumPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post []*GetForumPostModel `protobuf:"bytes,1,rep,name=post,proto3" json:"post,omitempty"`
}

func (x *GetForumPostResponse) Reset() {
	*x = GetForumPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForumPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForumPostResponse) ProtoMessage() {}

func (x *GetForumPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForumPostResponse.ProtoReflect.Descriptor instead.
func (*GetForumPostResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{31}
}

func (x *GetForumPostResponse) GetPost() []*GetForumPostModel {
	if x != nil {
		return x.Post
	}
	return nil
}

type GetSingleForumPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID string `protobuf:"bytes,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *GetSingleForumPostRequest) Reset() {
	*x = GetSingleForumPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleForumPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleForumPostRequest) ProtoMessage() {}

func (x *GetSingleForumPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleForumPostRequest.ProtoReflect.Descriptor instead.
func (*GetSingleForumPostRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{32}
}

func (x *GetSingleForumPostRequest) GetPostID() string {
	if x != nil {
		return x.PostID
	}
	return ""
}

type GetSingleForumPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *GetForumPostModel `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *GetSingleForumPostResponse) Reset() {
	*x = GetSingleForumPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleForumPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleForumPostResponse) ProtoMessage() {}

func (x *GetSingleForumPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleForumPostResponse.ProtoReflect.Descriptor instead.
func (*GetSingleForumPostResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{33}
}

func (x *GetSingleForumPostResponse) GetPost() *GetForumPostModel {
	if x != nil {
		return x.Post
	}
	return nil
}

type GetPostCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID string `protobuf:"bytes,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Limit  string `protobuf:"bytes,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset string `protobuf:"bytes,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetPostCommandRequest) Reset() {
	*x = GetPostCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostCommandRequest) ProtoMessage() {}

func (x *GetPostCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostCommandRequest.ProtoReflect.Descriptor instead.
func (*GetPostCommandRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{34}
}

func (x *GetPostCommandRequest) GetPostID() string {
	if x != nil {
		return x.PostID
	}
	return ""
}

func (x *GetPostCommandRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetPostCommandRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type GetPostCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []*ForumCommandModel `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
}

func (x *GetPostCommandResponse) Reset() {
	*x = GetPostCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostCommandResponse) ProtoMessage() {}

func (x *GetPostCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostCommandResponse.ProtoReflect.Descriptor instead.
func (*GetPostCommandResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{35}
}

func (x *GetPostCommandResponse) GetCommand() []*ForumCommandModel {
	if x != nil {
		return x.Command
	}
	return nil
}

type SearchServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID string `protobuf:"bytes,1,opt,name=serverID,proto3" json:"serverID,omitempty"`
	Limit    string `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	UserID   string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *SearchServerRequest) Reset() {
	*x = SearchServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchServerRequest) ProtoMessage() {}

func (x *SearchServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchServerRequest.ProtoReflect.Descriptor instead.
func (*SearchServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{36}
}

func (x *SearchServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *SearchServerRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *SearchServerRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *SearchServerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type SearchServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*GetServerResponse `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *SearchServerResponse) Reset() {
	*x = SearchServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_server_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchServerResponse) ProtoMessage() {}

func (x *SearchServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_server_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchServerResponse.ProtoReflect.Descriptor instead.
func (*SearchServerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_server_proto_rawDescGZIP(), []int{37}
}

func (x *SearchServerResponse) GetServers() []*GetServerResponse {
	if x != nil {
		return x.Servers
	}
	return nil
}

var File_pkg_pb_server_proto protoreflect.FileDescriptor

var file_pkg_pb_server_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x52, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x6f, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a, 0x11, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4f,
	0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x55, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0xbd, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x66, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x53, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x48, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x53, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x1b, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x91, 0x01, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x4b, 0x0a, 0x15, 0x4c, 0x65, 0x66, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xf9, 0x02, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0xc7, 0x02, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x22, 0x3e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x46, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x22, 0x77, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x14,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x32, 0xee, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x14, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x15, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0c,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4f,
	0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x4f, 0x66,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x15, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x19, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x18,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x44, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x4c, 0x65, 0x66, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x4c, 0x65, 0x66, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_server_proto_rawDescOnce sync.Once
	file_pkg_pb_server_proto_rawDescData = file_pkg_pb_server_proto_rawDesc
)

func file_pkg_pb_server_proto_rawDescGZIP() []byte {
	file_pkg_pb_server_proto_rawDescOnce.Do(func() {
		file_pkg_pb_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_server_proto_rawDescData)
	})
	return file_pkg_pb_server_proto_rawDescData
}

var file_pkg_pb_server_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_pkg_pb_server_proto_goTypes = []interface{}{
	(*CreateServerRequest)(nil),            // 0: CreateServerRequest
	(*CreateServerResponse)(nil),           // 1: CreateServerResponse
	(*CreateCategoryRequest)(nil),          // 2: CreateCategoryRequest
	(*CreateChannelRequest)(nil),           // 3: CreateChannelRequest
	(*JoinToServerRequest)(nil),            // 4: JoinToServerRequest
	(*Channel)(nil),                        // 5: Channel
	(*FullServerChannel)(nil),              // 6: FullServerChannel
	(*GetCategoryOfServerRequest)(nil),     // 7: GetCategoryOfServerRequest
	(*GetChannelsOfServerRequest)(nil),     // 8: GetChannelsOfServerRequest
	(*GetChannelsOfServerResponse)(nil),    // 9: GetChannelsOfServerResponse
	(*GetCategoryOfServerResponse)(nil),    // 10: GetCategoryOfServerResponse
	(*GetUserServerRequest)(nil),           // 11: GetUserServerRequest
	(*UserServerList)(nil),                 // 12: UserServerList
	(*GetUserServerResponse)(nil),          // 13: GetUserServerResponse
	(*GetServerRequest)(nil),               // 14: GetServerRequest
	(*GetServerResponse)(nil),              // 15: GetServerResponse
	(*GetChannelMessageRequest)(nil),       // 16: GetChannelMessageRequest
	(*ChannelMessage)(nil),                 // 17: ChannelMessage
	(*GetChannelMessageResponse)(nil),      // 18: GetChannelMessageResponse
	(*UpdateServerPhotoRequest)(nil),       // 19: UpdateServerPhotoRequest
	(*UpdateServerDiscriptionRequest)(nil), // 20: UpdateServerDiscriptionRequest
	(*GetServerMembersRequest)(nil),        // 21: GetServerMembersRequest
	(*ServerMemberModel)(nil),              // 22: ServerMemberModel
	(*GetServerMembersResponse)(nil),       // 23: GetServerMembersResponse
	(*RemoveUserFromServerRequest)(nil),    // 24: RemoveUserFromServerRequest
	(*UpdateMemberRoleRequest)(nil),        // 25: UpdateMemberRoleRequest
	(*LeftFromServerRequest)(nil),          // 26: LeftFromServerRequest
	(*DeleteServerRequest)(nil),            // 27: DeleteServerRequest
	(*GetForumPostRequest)(nil),            // 28: GetForumPostRequest
	(*GetForumPostModel)(nil),              // 29: GetForumPostModel
	(*ForumCommandModel)(nil),              // 30: ForumCommandModel
	(*GetForumPostResponse)(nil),           // 31: GetForumPostResponse
	(*GetSingleForumPostRequest)(nil),      // 32: GetSingleForumPostRequest
	(*GetSingleForumPostResponse)(nil),     // 33: GetSingleForumPostResponse
	(*GetPostCommandRequest)(nil),          // 34: GetPostCommandRequest
	(*GetPostCommandResponse)(nil),         // 35: GetPostCommandResponse
	(*SearchServerRequest)(nil),            // 36: SearchServerRequest
	(*SearchServerResponse)(nil),           // 37: SearchServerResponse
	(*emptypb.Empty)(nil),                  // 38: google.protobuf.Empty
}
var file_pkg_pb_server_proto_depIdxs = []int32{
	5,  // 0: FullServerChannel.channel:type_name -> Channel
	6,  // 1: GetChannelsOfServerResponse.Data:type_name -> FullServerChannel
	6,  // 2: GetCategoryOfServerResponse.Data:type_name -> FullServerChannel
	12, // 3: GetUserServerResponse.UserServerList:type_name -> UserServerList
	17, // 4: GetChannelMessageResponse.messages:type_name -> ChannelMessage
	22, // 5: GetServerMembersResponse.List:type_name -> ServerMemberModel
	30, // 6: ForumCommandModel.Thread:type_name -> ForumCommandModel
	29, // 7: GetForumPostResponse.post:type_name -> GetForumPostModel
	29, // 8: GetSingleForumPostResponse.post:type_name -> GetForumPostModel
	30, // 9: GetPostCommandResponse.command:type_name -> ForumCommandModel
	15, // 10: SearchServerResponse.servers:type_name -> GetServerResponse
	0,  // 11: Server.CreateServer:input_type -> CreateServerRequest
	2,  // 12: Server.CreateCategory:input_type -> CreateCategoryRequest
	3,  // 13: Server.CreateChannel:input_type -> CreateChannelRequest
	4,  // 14: Server.JoinToServer:input_type -> JoinToServerRequest
	7,  // 15: Server.GetCategoryOfServer:input_type -> GetCategoryOfServerRequest
	8,  // 16: Server.GetChannelsOfServer:input_type -> GetChannelsOfServerRequest
	11, // 17: Server.GetUserServer:input_type -> GetUserServerRequest
	14, // 18: Server.GetServer:input_type -> GetServerRequest
	16, // 19: Server.GetChannelMessage:input_type -> GetChannelMessageRequest
	19, // 20: Server.UpdateServerPhoto:input_type -> UpdateServerPhotoRequest
	20, // 21: Server.UpdateServerDiscription:input_type -> UpdateServerDiscriptionRequest
	21, // 22: Server.GetServerMembers:input_type -> GetServerMembersRequest
	24, // 23: Server.RemoveUserFromServer:input_type -> RemoveUserFromServerRequest
	25, // 24: Server.UpdateMemberRole:input_type -> UpdateMemberRoleRequest
	26, // 25: Server.LeftFromServer:input_type -> LeftFromServerRequest
	27, // 26: Server.DeleteServer:input_type -> DeleteServerRequest
	36, // 27: Server.SearchServer:input_type -> SearchServerRequest
	28, // 28: Server.GetForumPost:input_type -> GetForumPostRequest
	32, // 29: Server.GetSingleForumPost:input_type -> GetSingleForumPostRequest
	34, // 30: Server.GetPostCommand:input_type -> GetPostCommandRequest
	1,  // 31: Server.CreateServer:output_type -> CreateServerResponse
	38, // 32: Server.CreateCategory:output_type -> google.protobuf.Empty
	38, // 33: Server.CreateChannel:output_type -> google.protobuf.Empty
	38, // 34: Server.JoinToServer:output_type -> google.protobuf.Empty
	10, // 35: Server.GetCategoryOfServer:output_type -> GetCategoryOfServerResponse
	9,  // 36: Server.GetChannelsOfServer:output_type -> GetChannelsOfServerResponse
	13, // 37: Server.GetUserServer:output_type -> GetUserServerResponse
	15, // 38: Server.GetServer:output_type -> GetServerResponse
	18, // 39: Server.GetChannelMessage:output_type -> GetChannelMessageResponse
	38, // 40: Server.UpdateServerPhoto:output_type -> google.protobuf.Empty
	38, // 41: Server.UpdateServerDiscription:output_type -> google.protobuf.Empty
	23, // 42: Server.GetServerMembers:output_type -> GetServerMembersResponse
	38, // 43: Server.RemoveUserFromServer:output_type -> google.protobuf.Empty
	38, // 44: Server.UpdateMemberRole:output_type -> google.protobuf.Empty
	38, // 45: Server.LeftFromServer:output_type -> google.protobuf.Empty
	38, // 46: Server.DeleteServer:output_type -> google.protobuf.Empty
	37, // 47: Server.SearchServer:output_type -> SearchServerResponse
	31, // 48: Server.GetForumPost:output_type -> GetForumPostResponse
	33, // 49: Server.GetSingleForumPost:output_type -> GetSingleForumPostResponse
	35, // 50: Server.GetPostCommand:output_type -> GetPostCommandResponse
	31, // [31:51] is the sub-list for method output_type
	11, // [11:31] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pkg_pb_server_proto_init() }
func file_pkg_pb_server_proto_init() {
	if File_pkg_pb_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinToServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullServerChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryOfServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelsOfServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelsOfServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryOfServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserServerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerDiscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMemberModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserFromServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeftFromServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForumPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForumPostModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForumCommandModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForumPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleForumPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleForumPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_server_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_server_proto_goTypes,
		DependencyIndexes: file_pkg_pb_server_proto_depIdxs,
		MessageInfos:      file_pkg_pb_server_proto_msgTypes,
	}.Build()
	File_pkg_pb_server_proto = out.File
	file_pkg_pb_server_proto_rawDesc = nil
	file_pkg_pb_server_proto_goTypes = nil
	file_pkg_pb_server_proto_depIdxs = nil
}
